CREATE TABLE DROITS (
  idDroit SERIAL NOT NULL UNIQUE PRIMARY KEY,
  nomDroit VARCHAR(20) NOT NULL
);

CREATE TABLE UTILISATEURS (
  idUtilisateur SERIAL NOT NULL UNIQUE PRIMARY KEY,
  refDroit INTEGER NOT NULL REFERENCES DROITS ON UPDATE CASCADE ON DELETE RESTRICT,
  nomUtilisateur VARCHAR(50) NOT NULL,
  prenomUtilisateur VARCHAR(50) NOT NULL,
  mailUtilisateur VARCHAR(100) NOT NULL,
  mdpUtilisateur VARCHAR(50) NOT NULL
);

CREATE TABLE SESSIONS (
  idSession SERIAL NOT NULL UNIQUE PRIMARY KEY,
  refCreateur INTEGER NOT NULL REFERENCES UTILISATEURS ON UPDATE CASCADE ON DELETE RESTRICT,
  nomSession VARCHAR(50) NOT NULL,
  nbMaxInscritEvenement INTEGER,
  nbMinParticipationEvenement INTEGER,
  dateLimiteInscription DATE,
  dateRappelMail DATE
);

CREATE TABLE EVENEMENTS (
  idEvenement SERIAL NOT NULL UNIQUE PRIMARY KEY,
  refSession INTEGER NOT NULL REFERENCES SESSIONS ON UPDATE CASCADE ON DELETE RESTRICT,
  nomEvenement VARCHAR(50) NOT NULL,
  dateEvenement DATE NOT NULL,
  descEvenement TEXT,
  heureDebutEvenement TIMESTAMP,
  heureFinEvenement TIMESTAMP,
  emplacementEvenement VARCHAR(50)
);

CREATE TABLE AUS (
  idRefUtilisateur INTEGER NOT NULL REFERENCES UTILISATEURS ON UPDATE CASCADE ON DELETE CASCADE,
  idRefSession INTEGER NOT NULL REFERENCES SESSIONS ON UPDATE CASCADE ON DELETE CASCADE,
  PRIMARY KEY(idRefUtilisateur, idRefSession)
);

CREATE TABLE PARTICIPER (
  idRefUtilisateur INTEGER NOT NULL REFERENCES UTILISATEURS ON UPDATE CASCADE ON DELETE CASCADE,
  idRefEvenement INTEGER NOT NULL REFERENCES EVENEMENTS ON UPDATE CASCADE ON DELETE CASCADE,
  PRIMARY KEY(idRefUtilisateur, idRefEvenement)
);